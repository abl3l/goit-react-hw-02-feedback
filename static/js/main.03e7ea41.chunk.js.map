{"version":3,"sources":["Components/Statistics/Statistic.jsx","Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/App.jsx","index.js"],"names":["Statistic","label","value","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onClick","type","Section","title","children","App","state","handleIncrement","target","step","props","name","textContent","toLowerCase","setState","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAGMA,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,MAAR,OACb,6BACI,2BAAID,GACJ,2BAAIC,KAIZF,EAAUG,aAAgB,CACtBD,MAAM,GAQKF,QChBTI,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,kBAAC,EAAD,CAAWR,MAAM,QAAQC,MAAOG,IAChC,kBAAC,EAAD,CAAWJ,MAAM,WAAWC,MAAOI,IACnC,kBAAC,EAAD,CAAWL,MAAM,OAAOC,MAAOK,IAC/B,kBAAC,EAAD,CAAWN,MAAM,SAASC,MAAOM,IACjC,kBAAC,EAAD,CAAWP,MAAM,sBAAsBC,MAAOO,MAIlDL,EAAWD,aAAe,CACxBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,MAGPL,QCLAM,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACtB,6BACE,4BAAQC,KAAK,SAASD,QAASA,GAA/B,QAGA,4BAAQC,KAAK,SAASD,QAASA,GAA/B,WAGA,4BAAQC,KAAK,SAASD,QAASA,GAA/B,SCCWE,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BACE,4BAAKD,GACJC,ICDDC,E,2MAKJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,gBAAkB,YAAiB,IAAdC,EAAa,EAAbA,OACXC,EAAS,EAAKC,MAAdD,KACFE,EAAOH,EAAOI,YAAYC,cAChC,EAAKC,UAAS,SAAAR,GAAK,sBAChBK,EAAOL,EAAMK,GAAQF,O,EAI1BZ,MAAQ,WAAO,IAAD,EACmB,EAAKS,MACpC,OAFY,EACJZ,KADI,EACEC,QADF,EACWC,K,EAIzBE,mBAAqB,WAAO,IAClBJ,EAAS,EAAKY,MAAdZ,KACR,OAAOqB,KAAKC,MAAOtB,EAAO,EAAKG,QAAW,M,wEAGlC,IAAD,EACwBoB,KAAKX,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,6BACE,kBAAC,EAAD,CAASO,MAAM,yBACb,kBAAC,EAAD,CAAiBH,QAASiB,KAAKV,mBAGjC,kBAAC,EAAD,CAASJ,MAAM,cACK,IAAjBc,KAAKpB,QACJ,iDAEA,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,KAAKpB,QACZC,mBAAoBmB,KAAKnB,6B,GA9CrBoB,aAAZb,EACGb,aAAe,CACpBiB,KAAM,GAoDKJ,QCvDfc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.03e7ea41.chunk.js","sourcesContent":["import React from 'react';\r\nimport T from 'prop-types';\r\n\r\nconst Statistic =({label,value})=>(\r\n    <div>\r\n        <p>{label}</p>\r\n        <p>{value}</p>\r\n    </div>\r\n);\r\n\r\nStatistic.defaultProps  = {\r\n    value:0,\r\n};\r\n\r\nStatistic.propTypes = {\r\n    label: T.string.isRequired,\r\n    value:T.number.isRequired,\r\n};\r\n\r\nexport default Statistic;","import React from 'react';\r\nimport Statistic from './Statistic.jsx';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <Statistic label=\"Good:\" value={good} />\r\n    <Statistic label=\"Neutral:\" value={neutral} />\r\n    <Statistic label=\"Bad:\" value={bad} />\r\n    <Statistic label=\"Total:\" value={total} />\r\n    <Statistic label=\"Positive feedback :\" value={positivePercentage} />\r\n  </div>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: '0%',\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst FeedbackOptions = ({ onClick }) => (\r\n  <div>\r\n    <button type=\"button\" onClick={onClick}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" onClick={onClick}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={onClick}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport Statistics from './Statistics/Statistics.jsx';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions.jsx';\nimport Section from './Section/Section.jsx';\n\nclass App extends Component {\n  static defaultProps = {\n    step: 1,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = ({ target }) => {\n    const { step } = this.props;\n    const name = target.textContent.toLowerCase();\n    this.setState(state => ({\n      [name]: state[name] + step,\n    }));\n  };\n\n  total = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positivePercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.total()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onClick={this.handleIncrement} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.total() === 0 ? (\n            <h3>No feedback given</h3>\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.total()}\n              positivePercentage={this.positivePercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}