{"version":3,"sources":["Components/Statistics/Statistic.js","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/App.js","index.js"],"names":["Statistic","label","value","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onClick","type","Section","title","children","App","state","handleIncrement","name","target","textContent","toLowerCase","setState","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAGMA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,6BACE,2BAAID,GACJ,2BAAIC,KAIRF,EAAUG,aAAe,CACvBD,MAAO,GAQMF,QCfTI,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,kBAAC,EAAD,CAAWR,MAAM,QAAQC,MAAOG,IAChC,kBAAC,EAAD,CAAWJ,MAAM,WAAWC,MAAOI,IACnC,kBAAC,EAAD,CAAWL,MAAM,OAAOC,MAAOK,IAC/B,kBAAC,EAAD,CAAWN,MAAM,SAASC,MAAOM,IACjC,kBAAC,EAAD,CAAWP,MAAM,sBAAsBC,MAAOO,MAIlDL,EAAWD,aAAe,CACxBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,MAWPL,QCTAM,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACtB,6BACE,4BAAQC,KAAK,SAASD,QAASA,GAA/B,QAGA,4BAAQC,KAAK,SAASD,QAASA,GAA/B,WAGA,4BAAQC,KAAK,SAASD,QAASA,GAA/B,SCKWE,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BACE,4BAAKD,GACJC,IC+CQC,E,2MAhDbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,gBAAkB,YAAiB,IAC3BC,EAD0B,EAAbC,OACCC,YAAYC,cAChC,EAAKC,UAAS,SAAAN,GAAK,sBAChBE,EAAOF,EAAME,GAAQ,O,EAI1BX,MAAQ,WAAO,IAAD,EACmB,EAAKS,MACpC,OAFY,EACJZ,KADI,EACEC,QADF,EACWC,K,EAIzBE,mBAAqB,WAAO,IAClBJ,EAAS,EAAKY,MAAdZ,KACR,OAAOmB,KAAKC,MAAOpB,EAAO,EAAKG,QAAW,M,wEAGlC,IAAD,EACwBkB,KAAKT,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,6BACE,kBAAC,EAAD,CAASO,MAAM,yBACb,kBAAC,EAAD,CAAiBH,QAASe,KAAKR,mBAGjC,kBAAC,EAAD,CAASJ,MAAM,cACK,IAAjBY,KAAKlB,QACJ,iDAEA,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKlB,QACZC,mBAAoBiB,KAAKjB,6B,GAzCrBkB,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.5bb7be0b.chunk.js","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\n\nconst Statistic = ({ label, value }) => (\n  <div>\n    <p>{label}</p>\n    <p>{value}</p>\n  </div>\n);\n\nStatistic.defaultProps = {\n  value: 0,\n};\n\nStatistic.propTypes = {\n  label: T.string.isRequired,\n  value: T.number,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport T from 'prop-types';\nimport Statistic from './Statistic';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <Statistic label=\"Good:\" value={good} />\n    <Statistic label=\"Neutral:\" value={neutral} />\n    <Statistic label=\"Bad:\" value={bad} />\n    <Statistic label=\"Total:\" value={total} />\n    <Statistic label=\"Positive feedback :\" value={positivePercentage} />\n  </div>\n);\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: '0%',\n};\n\nStatistics.propTypes = {\n  good: T.number,\n  neutral: T.number,\n  bad: T.number,\n  total: T.number,\n  positivePercentage: T.string,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst FeedbackOptions = ({ onClick }) => (\n  <div>\n    <button type=\"button\" onClick={onClick}>\n      Good\n    </button>\n    <button type=\"button\" onClick={onClick}>\n      Neutral\n    </button>\n    <button type=\"button\" onClick={onClick}>\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onClick: T.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: T.string.isRequired,\n  children: T.element.isRequired,\n};\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = ({ target }) => {\n    const name = target.textContent.toLowerCase();\n    this.setState(state => ({\n      [name]: state[name] + 1,\n    }));\n  };\n\n  total = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positivePercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.total()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onClick={this.handleIncrement} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.total() === 0 ? (\n            <h3>No feedback given</h3>\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.total()}\n              positivePercentage={this.positivePercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}